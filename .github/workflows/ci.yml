---

name: Continuous Integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - "!master"
      - "!staging"

jobs:
  Test:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.10-alpine

    services:
      mysql:
        image: mysql:5.7.24
        env:
          MYSQL_DATABASE: recognizer_test
          MYSQL_ROOT_PASSWORD: recognizer

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install (os)
        run: apk add --no-cache gcc g++ git imagemagick libmcrypt-dev make musl-dev tar zstd

      - name: Cache
        id: cache-mix
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('mix.lock') }}
          path: |
            _build
            deps

      - name: Install (mix)
        if: steps.cache-mix.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Test
        run: mix test
        env:
          DB_HOST: mysql

  Format:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.10-alpine

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install (os)
        run: apk add --no-cache gcc g++ git imagemagick libmcrypt-dev make musl-dev

      - name: Install (mix)
        if: steps.cache-mix.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Format
        run: mix format --check-formatted

  Credo:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.10-alpine

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install (os)
        run: apk add --no-cache gcc g++ git imagemagick libmcrypt-dev make musl-dev tar zstd

      - name: Cache
        id: cache-mix
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('mix.lock') }}
          path: |
            _build
            deps

      - name: Install (mix)
        if: steps.cache-mix.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Credo
        run: mix credo
